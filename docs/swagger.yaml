basePath: /api
definitions:
  models.Empty:
    description: HTTP Body model for all responses
    type: object
  models.Guild:
    description: Model of guild data
    properties:
      guild_id:
        type: string
      multiplier:
        type: integer
      pb_channel_id:
        $ref: '#/definitions/models.NullString'
    type: object
  models.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  models.RSN:
    properties:
      guild_id:
        type: string
      rsn:
        type: string
      user_id:
        type: string
      wom_id:
        type: string
    type: object
  models.User:
    description: Model of active guild member
    properties:
      guild_id:
        type: string
      points:
        type: integer
      user_id:
        type: string
    type: object
  models.Users:
    description: Model of active guild members
    properties:
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Functionality provider for Tectonic guild.
  title: Tectonic API
  version: "0.1"
paths:
  /api/v1/rsn:
    delete:
      description: Delete a RSN in our backend by unique guild and user Snowflake
        (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: RSN
        in: path
        name: rsn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Remove RSN from guild and user
      tags:
      - RSN
    get:
      description: Get RSN related details by unique guild and user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      - description: User ID
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RSN'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get RSN related information by guild and user ID
      tags:
      - RSN
    post:
      description: Link an RSN to a guild and user in our backend by unique guild
        and user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: RSN
        in: path
        name: rsn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Link an RSN to a user
      tags:
      - RSN
  /v1/guild:
    delete:
      description: Delete a guild in our backend by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Delete a guild
      tags:
      - Guild
    get:
      description: Get guild details by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Guild'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get a guild by ID
      tags:
      - Guild
    post:
      description: Initialize a guild in our backend by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Create / Initialize a guild
      tags:
      - Guild
  /v1/guild/multiplier:
    put:
      description: Update guild point multiplier by guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Update multiplier for guild
      tags:
      - Guild
  /v1/guild/times:
    put:
      description: Update where time related embeds are located in our backend by
        unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Update times channel from guild
      tags:
      - Guild
  /v1/leaderboard:
    get:
      description: Get guilds leaderboard details by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get a guilds leaderboard by ID
      tags:
      - Leaderboard
  /v1/time:
    delete:
      description: Delete a time in our backend by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Remove time from guilds best times
      tags:
      - Time
    post:
      description: Add a new time to a guild in our backend by unique guild Snowflake
        (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Add a new best time to guild
      tags:
      - Time
  /v1/user:
    delete:
      description: Delete a user in our backend by unique user and guild Snowflake
        (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Delete a user from guild
      tags:
      - User
    get:
      description: Get user details by unique user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: WOM ID
        in: query
        name: wom_id
        type: string
      - description: RSN
        in: query
        name: rsn
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get a user by ID
      tags:
      - User
    post:
      description: Initialize a guild in our backend by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: RSN
        in: path
        name: rsn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Create / Initialize a new user
      tags:
      - User
  /v1/users:
    get:
      description: Get multiple users details by unique user Snowflakes (IDs)
      parameters:
      - description: Guild ID
        in: query
        name: guild_id
        type: string
      - description: User IDs
        in: query
        name: user_ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get multiple users
      tags:
      - Users
swagger: "2.0"
