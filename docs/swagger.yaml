basePath: /api
definitions:
  models.Empty:
    description: HTTP Body model for all responses
    type: object
  models.Guild:
    description: Model of guild data
    properties:
      guild_id:
        type: string
      multiplier:
        type: integer
      pb_channel_id:
        $ref: '#/definitions/models.NullString'
    type: object
  models.InputGuild:
    description: Model of new guild data
    properties:
      guild_id:
        type: string
      multiplier:
        type: integer
      pb_channel_id:
        type: string
    type: object
  models.InputRSN:
    properties:
      guild_id:
        type: string
      rsn:
        type: string
      user_id:
        type: string
    type: object
  models.InputTime:
    description: Model of a new time
    properties:
      boss_name:
        type: string
      time:
        type: integer
      user_ids:
        items:
          type: string
        type: array
    type: object
  models.InputUser:
    description: Model of new active guild member
    properties:
      guild_id:
        type: string
      rsn:
        type: string
      user_id:
        type: string
    type: object
  models.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  models.RSN:
    properties:
      guild_id:
        type: string
      rsn:
        type: string
      user_id:
        type: string
      wom_id:
        type: string
    type: object
  models.UpdateGuild:
    description: Model of updated guild data (Exists so PbChannelId can be properly
      parsed)
    properties:
      guild_id:
        type: string
      multiplier:
        type: integer
      pb_channel_id:
        type: string
    type: object
  models.User:
    description: Model of active guild member
    properties:
      guild_id:
        type: string
      points:
        type: integer
      user_id:
        type: string
    type: object
  models.Users:
    description: Model of active guild members
    properties:
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: Functionality provider for Tectonic guild.
  title: Tectonic API
  version: "0.1"
paths:
  /api/v1/guilds:
    post:
      consumes:
      - application/json
      description: Initialize a guild in our backend by unique guild Snowflake (ID)
      parameters:
      - description: Guild
        in: body
        name: guild
        required: true
        schema:
          $ref: '#/definitions/models.InputGuild'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Create / Initialize a guild
      tags:
      - Guild
  /api/v1/guilds/{guild_id}:
    delete:
      description: Delete a guild in our backend by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Delete a guild
      tags:
      - Guild
    get:
      description: Get guild details by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Guild'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get a guild by ID
      tags:
      - Guild
    put:
      consumes:
      - application/json
      description: Update multiplier and/or time channel for a guild
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: Guild
        in: body
        name: guild
        required: true
        schema:
          $ref: '#/definitions/models.UpdateGuild'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Updates a guild
      tags:
      - Guild
  /api/v1/guilds/{guild_id}/leaderboard:
    get:
      description: Get guilds leaderboard details by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get a guilds leaderboard by ID
      tags:
      - Leaderboard
  /api/v1/guilds/{guild_id}/users:
    get:
      description: Get multiple users details by unique user Snowflakes (IDs)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User IDs
        in: query
        name: user_ids
        type: string
      - description: WOM IDs
        in: query
        name: wom_ids
        type: string
      - description: RSNs
        in: query
        name: rsns
        type: string
      - description: User IDs
        in: query
        name: user_ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get multiple users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Initialize a user in our backend by unique user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User
        in: body
        name: guild
        required: true
        schema:
          $ref: '#/definitions/models.InputUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Create / Initialize a new user
      tags:
      - User
  /api/v1/guilds/{guild_id}/users/{user_id}:
    delete:
      description: Delete a user in our backend by unique user and guild Snowflake
        (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Delete a user from guild
      tags:
      - User
    get:
      description: Get user details by unique user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get a user by ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update a user in our backend by unique user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: User
        in: body
        name: guild
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Update a user
      tags:
      - User
  /api/v1/guilds/{guild_id}/users/{user_id}/rsns:
    get:
      description: Get RSN related details by unique guild and user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        type: string
      - description: User ID
        in: path
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RSN'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Get RSN related information by guild and user ID
      tags:
      - RSN
    post:
      consumes:
      - application/json
      description: Link an RSN to a guild and user in our backend by unique guild
        and user Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: RSN
        in: body
        name: rsn
        required: true
        schema:
          $ref: '#/definitions/models.InputRSN'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Link an RSN to a user
      tags:
      - RSN
  /api/v1/guilds/{guild_id}/users/{user_id}/rsns/{rsn}:
    delete:
      description: Delete a RSN in our backend by unique guild and user Snowflake
        (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: RSN
        in: path
        name: rsn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Remove RSN from guild and user
      tags:
      - RSN
  /v1/guilds/{guild_id}/times:
    post:
      consumes:
      - application/json
      description: Add a new time to a guild in our backend by unique guild Snowflake
        (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: Time
        in: body
        name: time
        required: true
        schema:
          $ref: '#/definitions/models.InputTime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Add a new best time to guild
      tags:
      - Time
  /v1/guilds/{guild_id}/times/{time_id}:
    delete:
      description: Delete a time in our backend by unique guild Snowflake (ID)
      parameters:
      - description: Guild ID
        in: path
        name: guild_id
        required: true
        type: string
      - description: Time ID
        in: path
        name: time_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Empty'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Empty'
      summary: Remove time from guilds best times
      tags:
      - Time
swagger: "2.0"
