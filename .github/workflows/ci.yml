name: Continuous Integration

'on': push

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      API_KEY: "foobar"
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1'

      - name: Set up sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.28.0'

      - name: Generate go code from sqlc
        run: sqlc generate -f database/sqlc.yaml

      - name: Build
        run: go build -o tectonic

      - name: Test
        run: go test -v ./...

      - name: Start Go application
        run: >
          ./tectonic &

          echo "APP_PID=$!" >> $GITHUB_ENV  # Store the process ID

          sleep 10

          echo "APP_URL=http://localhost:8080" >> $GITHUB_ENV

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      # - name: Login to Postman CLI
      #   run: 'postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}'
      # - name: Run API tests
      #   run: >
      #     postman collection run "${{ github.workspace }}/Integrations.postman_collection.json" --integration-id "175265-${{ github.run_id }}" --env-var "Authorization=$API_KEY"
      - name: Run API tests
        run: >
          postman collection run "${{ github.workspace }}/Integrations.postman_collection.json" --env-var "Authorization=$API_KEY" --env-var "baseUrl=http://localhost:8080/api"
      - name: Cleanup
        if: always()
        run: |
          kill ${{ env.APP_PID }} || true

