name: Continuous Integration

'on': push

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: tectonic
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      API_KEY: "foobar"
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tectonic

    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1'

      - name: "Set up stringifier"
        run: go install golang.org/x/tools/cmd/stringer@latest

      - name: Set up sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.28.0'

      - name: Generate go code from sqlc
        run: sqlc generate -f database/sqlc.yaml

      - name: Generate error String()
        run: go generate ./models

      - name: Build
        run: go build -o tectonic

      - name: Test
        run: go test -v ./...

